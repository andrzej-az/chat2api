services:
  warp:
    image: caomingjun/warp
    container_name: warp
    restart: always
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - WARP_SLEEP=5
    cap_add:
      - MKNOD
      - AUDIT_WRITE
      - NET_ADMIN
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ./warpdata:/var/lib/cloudflare-warp
    networks:
      - internal_network  # Use internal network, do not expose ports to the outside
    healthcheck:
      test: ["CMD", "curl", "-f", "-s", "https://www.google.com"]  # Request Google in silent mode, if successful returns a 2xx status code
      interval: 30s  # Check every 30 seconds
      timeout: 10s   # Request timeout 10 seconds
      retries: 3     # Mark as unhealthy after 3 failures
      start_period: 5s  # Wait 5 seconds after container starts before starting checks
      
  chat2api:
    image: andrzejaz/chat2api:latest
    container_name: chat2api
    restart: unless-stopped
    ports:
      - '5005:5005'  # Expose chat2api service for external access
    environment:
      - TZ=Asia/Shanghai
      - AUTHORIZATION=sk-xxx
      - PROXY_URL=socks5://warp:1080  # Set PROXY_URL to the proxy address of the warp container
    depends_on:
      warp:
        condition: service_healthy  # chat2api will only start when warp's health check passes
    networks:
      - internal_network  # chat2api and warp are on the same internal network
    volumes:
      - ./data:/app/data # Mount some data that needs to be persisted

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 300 chat2api
    
networks:
  internal_network:
    driver: bridge  # Define a bridge network
